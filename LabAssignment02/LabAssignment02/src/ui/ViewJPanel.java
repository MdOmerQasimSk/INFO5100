/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Employee;
import model.EmployeeCatalogue;

/**
 *
 * @author omerq
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    
    EmployeeCatalogue employeeCatalogue;
    
    public ViewJPanel(EmployeeCatalogue employeeCatalogue) {
        initComponents();
        this.employeeCatalogue = employeeCatalogue;
        populateEmployeeTable();
        jEmpId.setEnabled(false); //non-editable
        displayNEU();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jSearchOptions = new javax.swing.JComboBox<>();
        jSearch = new javax.swing.JTextField();
        jSearchBtn = new javax.swing.JButton();
        jResetBtn = new javax.swing.JButton();
        jDateFormatMessage = new javax.swing.JLabel();
        jPictureValidation = new javax.swing.JLabel();
        jUploadPhoto = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jEmail = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTelNum = new javax.swing.JTextField();
        jTelNumValidation = new javax.swing.JLabel();
        jEmailValidation = new javax.swing.JLabel();
        jPInfoPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jName = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLevel = new javax.swing.JTextField();
        jPosition = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTeam = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jGender = new javax.swing.JComboBox<>();
        jStartDate = new com.toedter.calendar.JDateChooser();
        jNameValidation = new javax.swing.JLabel();
        jAgeValidation = new javax.swing.JLabel();
        jGenderValidation = new javax.swing.JLabel();
        jStartDateValidation = new javax.swing.JLabel();
        jLevelValidation = new javax.swing.JLabel();
        jTeamValidation = new javax.swing.JLabel();
        jPositionValidation = new javax.swing.JLabel();
        jAge = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jEmpId = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jUserPhoto = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jUpdateBtn = new javax.swing.JButton();
        jDeleteBtn = new javax.swing.JButton();
        jNEUPanel = new javax.swing.JPanel();
        jNEUPhoto = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(900, 800));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("VIEW EMPLOYEE PROFILE");

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Employee ID", "Name", "Gender", "Start Date", "Position Title", "Level"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable.getTableHeader().setReorderingAllowed(false);
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable);
        if (jTable.getColumnModel().getColumnCount() > 0) {
            jTable.getColumnModel().getColumn(0).setMinWidth(80);
            jTable.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTable.getColumnModel().getColumn(0).setMaxWidth(80);
            jTable.getColumnModel().getColumn(2).setMinWidth(75);
            jTable.getColumnModel().getColumn(2).setPreferredWidth(75);
            jTable.getColumnModel().getColumn(2).setMaxWidth(75);
            jTable.getColumnModel().getColumn(3).setMinWidth(120);
            jTable.getColumnModel().getColumn(3).setPreferredWidth(120);
            jTable.getColumnModel().getColumn(3).setMaxWidth(120);
            jTable.getColumnModel().getColumn(5).setMinWidth(100);
            jTable.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable.getColumnModel().getColumn(5).setMaxWidth(100);
        }

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Advanced Search"));
        jPanel1.setPreferredSize(new java.awt.Dimension(492, 100));

        jSearchOptions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select --", "Emp ID", "Name", "Team", "Level", "Title", "Start Date", "Telephone", "Email" }));
        jSearchOptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchOptionsActionPerformed(evt);
            }
        });

        jSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchActionPerformed(evt);
            }
        });

        jSearchBtn.setText("Search");
        jSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchBtnActionPerformed(evt);
            }
        });

        jResetBtn.setText("Reset");
        jResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jResetBtnActionPerformed(evt);
            }
        });

        jDateFormatMessage.setText("   ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jSearchOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDateFormatMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSearchBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jResetBtn)
                .addGap(10, 10, 10))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jSearch, jSearchOptions});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jResetBtn, jSearchBtn});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSearchOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSearchBtn)
                    .addComponent(jResetBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateFormatMessage)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jResetBtn, jSearchBtn});

        jPictureValidation.setText("   ");

        jUploadPhoto.setText("Upload");
        jUploadPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUploadPhotoActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Contact Information"));
        jPanel2.setPreferredSize(new java.awt.Dimension(508, 105));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel18.setText("Telephone");

        jEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jEmailKeyReleased(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel17.setText("Email");

        jTelNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTelNumKeyReleased(evt);
            }
        });

        jTelNumValidation.setText("   ");

        jEmailValidation.setText("   ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTelNum, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17))
                    .addComponent(jTelNumValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jEmailValidation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTelNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTelNumValidation)
                    .addComponent(jEmailValidation))
                .addGap(14, 14, 14))
        );

        jPInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Personal Information"));
        jPInfoPanel.setPreferredSize(new java.awt.Dimension(508, 276));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Name");

        jName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jNameKeyReleased(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setText("Gender");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel16.setText("Age");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel19.setText("Start Date");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel20.setText("Level");

        jLevel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jLevelKeyReleased(evt);
            }
        });

        jPosition.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPositionKeyReleased(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel21.setText("Position");

        jTeam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTeamKeyReleased(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel22.setText("Team");

        jGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select --", "Male", "Female", "Others" }));
        jGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGenderActionPerformed(evt);
            }
        });

        jStartDate.setDateFormatString("dd-MM-yy");
        jStartDate.setMinSelectableDate(new java.util.Date(-62135785712000L));

        jNameValidation.setText("   ");

        jAgeValidation.setText("   ");

        jGenderValidation.setText("   ");

        jStartDateValidation.setText("   ");

        jLevelValidation.setText("   ");

        jTeamValidation.setText("   ");

        jPositionValidation.setText("   ");

        jAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jAgeKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("EmpId");

        javax.swing.GroupLayout jPInfoPanelLayout = new javax.swing.GroupLayout(jPInfoPanel);
        jPInfoPanel.setLayout(jPInfoPanelLayout);
        jPInfoPanelLayout.setHorizontalGroup(
            jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPInfoPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPInfoPanelLayout.createSequentialGroup()
                        .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel22)
                            .addComponent(jLabel16))
                        .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPInfoPanelLayout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTeam)
                                    .addComponent(jStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(jTeamValidation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jStartDateValidation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jAgeValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPInfoPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jAge, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(2, 2, 2))))
                    .addComponent(jLabel4))
                .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPInfoPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel15)
                            .addComponent(jLabel3))
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPInfoPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPosition)
                    .addComponent(jLevel)
                    .addComponent(jGender, 0, 150, Short.MAX_VALUE)
                    .addComponent(jName)
                    .addComponent(jNameValidation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jGenderValidation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLevelValidation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPositionValidation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );
        jPInfoPanelLayout.setVerticalGroup(
            jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPInfoPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPInfoPanelLayout.createSequentialGroup()
                        .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPInfoPanelLayout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPInfoPanelLayout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(5, 5, 5)
                        .addComponent(jAgeValidation))
                    .addGroup(jPInfoPanelLayout.createSequentialGroup()
                        .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addComponent(jNameValidation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jGenderValidation)))
                .addGap(10, 10, 10)
                .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPInfoPanelLayout.createSequentialGroup()
                        .addComponent(jStartDateValidation)
                        .addGap(10, 10, 10)
                        .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTeam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))
                        .addGap(5, 5, 5)
                        .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTeamValidation)
                            .addComponent(jPositionValidation)))
                    .addComponent(jLevelValidation))
                .addGap(14, 14, 14))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Employee Picture"));

        jUserPhoto.setBackground(new java.awt.Color(255, 255, 255));
        jUserPhoto.setAlignmentY(0.0F);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jUserPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jUserPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Action"));

        jUpdateBtn.setText("Update");
        jUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdateBtnActionPerformed(evt);
            }
        });

        jDeleteBtn.setText("Delete");
        jDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jUpdateBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDeleteBtn)
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jDeleteBtn, jUpdateBtn});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jUpdateBtn)
                    .addComponent(jDeleteBtn))
                .addGap(15, 15, 15))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jDeleteBtn, jUpdateBtn});

        jNEUPanel.setPreferredSize(new java.awt.Dimension(222, 90));

        jNEUPhoto.setPreferredSize(new java.awt.Dimension(222, 90));

        javax.swing.GroupLayout jNEUPanelLayout = new javax.swing.GroupLayout(jNEUPanel);
        jNEUPanel.setLayout(jNEUPanelLayout);
        jNEUPanelLayout.setHorizontalGroup(
            jNEUPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jNEUPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jNEUPanelLayout.setVerticalGroup(
            jNEUPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jNEUPanelLayout.createSequentialGroup()
                .addComponent(jNEUPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(321, 321, 321)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jNEUPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(52, 52, 52)
                                            .addComponent(jUploadPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jPictureValidation, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGap(30, 30, 30)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(134, 134, 134))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jNEUPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPictureValidation)
                        .addGap(3, 3, 3)
                        .addComponent(jUploadPhoto)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void displayNEU(){
        ImageIcon icon = new ImageIcon("C:\\Users\\omerq\\Desktop\\NEU.png");
        //Resize Image
        Image img = icon.getImage();
        Image imgScale = img.getScaledInstance(222, 90, Image.SCALE_SMOOTH);
        ImageIcon scaledIcon = new ImageIcon(imgScale);
        jNEUPhoto.setIcon(scaledIcon);
    }
    
    
    private void jDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable.getSelectedRow();      
        if(selectedRow<0){
            JOptionPane.showMessageDialog(this, "Please select any row to delete");
            return;
        }  
        DefaultTableModel dtmodel = (DefaultTableModel) jTable.getModel();
        Employee selectedRowObj = (Employee) dtmodel.getValueAt(selectedRow, 0);
        employeeCatalogue.removeEmployee(selectedRowObj);
        JOptionPane.showMessageDialog(this, "Employee profile removed!"); //TO-DO: add empID
        this.populateEmployeeTable();  
        
        //Clear deleted data
        clearFields();
    }//GEN-LAST:event_jDeleteBtnActionPerformed

    private void jUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdateBtnActionPerformed
        
        int selectedRow = jTable.getSelectedRow();      
        if(selectedRow<0 && jEmpId.getText().isBlank()){
            JOptionPane.showMessageDialog(this, "Please select any row to update");
            return;
        }  
        
        //valildations
        boolean checkIsValid = validateName(jName.getText()) && validateTeam(jTeam.getText()) &&
                                validateAge(jAge.getText()) && !validateGender() && 
                                validateLevel(jLevel.getText()) && validatePosition(jPosition.getText()) &&
                                validateTelNum(jTelNum.getText()) && validateEmail(jEmail.getText());
        
        if(!checkIsValid){
            JOptionPane.showMessageDialog(this, "Please enter required fields!");
            return;
        }
        
        //Display selectedRow
        Employee updatedEmployee = new Employee();
        updatedEmployee.setEmpId(Integer.parseInt(jEmpId.getText()));
        updatedEmployee.setName(jName.getText());
        updatedEmployee.setAge(Integer.parseInt(jAge.getText()));
        updatedEmployee.setGender(jGender.getSelectedItem().toString());
        updatedEmployee.setStartDate(jStartDate.getDate());
        updatedEmployee.setLevel(jLevel.getText());
        updatedEmployee.setTeamInfo(jTeam.getText());
        updatedEmployee.setPositionTitle(jPosition.getText());
        updatedEmployee.setPhoneNumber(jTelNum.getText());
        updatedEmployee.setEmail(jEmail.getText());
        updatedEmployee.setEmpPhoto((ImageIcon)jUserPhoto.getIcon());
        
        //update
        employeeCatalogue.updateEmployee(updatedEmployee, employeeCatalogue.getEmployeeList());
        JOptionPane.showMessageDialog(this, "Employee profile updated!"); //TO-DO: add empID
        this.populateEmployeeTable();      
    }//GEN-LAST:event_jUpdateBtnActionPerformed

    private void jSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchActionPerformed
        // TODO add your handling code here:
        //Validation based on selected dropdown value   
    }//GEN-LAST:event_jSearchActionPerformed

    private boolean validateSearchOption(String searchType, String searchValue){
        if(searchType.equalsIgnoreCase("Emp ID") && !validateEmpId(searchValue)){
            jDateFormatMessage.setText("Invalid Emp ID");
            jDateFormatMessage.setForeground(Color.red);
            return false;
        } else if(searchType.equalsIgnoreCase("Name") && !validateName(searchValue)){
            jDateFormatMessage.setText("Invalid Name");
            jDateFormatMessage.setForeground(Color.red);
            return false;
        } else if(searchType.equalsIgnoreCase("Team") && !validateTeam(searchValue)){
            jDateFormatMessage.setText("Invalid Team Name");
            jDateFormatMessage.setForeground(Color.red);
            return false;
        } else if(searchType.equalsIgnoreCase("Level") && !validateLevel(searchValue)){
            jDateFormatMessage.setText("Invalid Level");
            jDateFormatMessage.setForeground(Color.red);
            return false;
        } else if(searchType.equalsIgnoreCase("Title") && !validatePosition(searchValue)){
            jDateFormatMessage.setText("Invalid Position Title");
            jDateFormatMessage.setForeground(Color.red);
            return false;
        } else if(searchType.equalsIgnoreCase("Telephone") && !validateTelNum(searchValue)){
            jDateFormatMessage.setText("Invalid phone number");
            jDateFormatMessage.setForeground(Color.red);
            return false;
        } else if(searchType.equalsIgnoreCase("Email") && !validateEmail(searchValue)){
            jDateFormatMessage.setText("Invalid email");
            jDateFormatMessage.setForeground(Color.red);
            return false;
        } else if(searchType.equalsIgnoreCase("Start Date") && !validateStartDate(searchValue)){
            jDateFormatMessage.setText("Invalid format");
            jDateFormatMessage.setForeground(Color.red);
            return false;
        } else {
            jDateFormatMessage.setText(" ");
            return true;
        }
    }
    
    private void jSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchBtnActionPerformed
        // TODO add your handling code here:
        String searchType = jSearchOptions.getSelectedItem().toString();
        String searchValue = jSearch.getText(); //empID,name,team
        //Validation
        if(!validateSearchOption(searchType, searchValue)){
            return;
        }
        if(searchType.equals("-- Select --")){
            JOptionPane.showMessageDialog(this, "Please select valid search option");
            return;
        }
        //Initialize Table 
        DefaultTableModel dtmodel = (DefaultTableModel) jTable.getModel();
        dtmodel.setRowCount(0);
        //Populate rowData
        ArrayList<Employee> tempList = employeeCatalogue.searchByOption(searchType, searchValue, employeeCatalogue.getEmployeeList()); //model-class call
        if(tempList.isEmpty()){
            JOptionPane.showMessageDialog(this, "No data found!");
//            this.populateEmployeeTable();  
        } else {
            //Iterate and show data
            for(Employee emp: tempList){
                Object[] obj = new Object[6];
                obj[0] = emp;
                obj[1] = emp.getName();
                obj[2] = emp.getGender();
                String startDate = new SimpleDateFormat("dd-MM-yyyy").format(emp.getStartDate());
                obj[3] = startDate;
                obj[4] = emp.getPositionTitle();
                obj[5] = emp.getLevel();
                dtmodel.addRow(obj);
            }
            JOptionPane.showMessageDialog(this, "Found " + tempList.size() + " entries!");
        }
        
    }//GEN-LAST:event_jSearchBtnActionPerformed

    private void jResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jResetBtnActionPerformed
        // TODO add your handling code here:
        clearFields();
        populateEmployeeTable();
        jSearchOptions.setSelectedIndex(0);
        jSearch.setText("");
    }//GEN-LAST:event_jResetBtnActionPerformed

    private void clearFields(){
        //Clear fields
        jEmpId.setText("");
        jName.setText("");
        jAge.setText("");
        jGender.setSelectedIndex(0);
        jStartDate.setCalendar(null);
        jLevel.setText("");
        jTeam.setText("");
        jPosition.setText("");
        jTelNum.setText("");
        jEmail.setText("");
        jUserPhoto.setIcon(null);
        
        //Clear validation messages
        jGenderValidation.setText(" ");
        jNameValidation.setText(" ");
        jAgeValidation.setText(" ");
        jTelNumValidation.setText(" ");
        jEmailValidation.setText(" ");
        jPositionValidation.setText(" ");
        jTeamValidation.setText(" ");
        jLevelValidation.setText(" ");
        jStartDateValidation.setText(" ");
        jPictureValidation.setText(" ");
    }
    
    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked

        //Clear previous selected data
        clearFields();
        
        //Select row data
        int selectedRow = jTable.getSelectedRow();
        DefaultTableModel dtmodel = (DefaultTableModel) jTable.getModel();
        Employee selectedRowObj = (Employee) dtmodel.getValueAt(selectedRow, 0);
        
        //Display rowData
        jEmpId.setText(String.valueOf(selectedRowObj.getEmpId()));
        jName.setText(selectedRowObj.getName());
        jAge.setText(String.valueOf(selectedRowObj.getAge()));
        jStartDate.setDate(selectedRowObj.getStartDate());
        jLevel.setText(selectedRowObj.getLevel());
        jTeam.setText(selectedRowObj.getTeamInfo());
        jPosition.setText(selectedRowObj.getPositionTitle());
        jTelNum.setText(selectedRowObj.getPhoneNumber());
        jEmail.setText(selectedRowObj.getEmail());
        jUserPhoto.setIcon(selectedRowObj.getEmpPhoto());
        jGender.setSelectedItem(selectedRowObj.getGender());
    }//GEN-LAST:event_jTableMouseClicked

    private void jUploadPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUploadPhotoActionPerformed
        //Choose Image
        JFileChooser jFileChooser = new JFileChooser();
        jFileChooser.showOpenDialog(null);
        File file = jFileChooser.getSelectedFile();
        if(file == null){ // If no image is selected
            jPictureValidation.setText("Please upload your picture");
            jPictureValidation.setForeground(Color.red);
            return;
        }
        String filename = file.getAbsolutePath();
        ImageIcon icon = new ImageIcon(filename);
        //Resize Image
        Image img = icon.getImage();
        Image imgScale = img.getScaledInstance(167, 188, Image.SCALE_SMOOTH);
        ImageIcon scaledIcon = new ImageIcon(imgScale);
        jUserPhoto.setIcon(scaledIcon);
        //Clear validation message
        jPictureValidation.setText(" ");
    }//GEN-LAST:event_jUploadPhotoActionPerformed

    
    //Validations
    private boolean validateEmpId(String validEmpId){
        Pattern pattern = Pattern.compile("[1-9]{1}[0-9]{3}");
        Matcher matcher = pattern.matcher(validEmpId);
        return matcher.matches();
    }
    
    private void jEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jEmailKeyReleased
        // TODO add your handling code here:
        if(!validateEmail(jEmail.getText())){
            jEmailValidation.setText("Invalid Email");
            jEmailValidation.setForeground(Color.red);
        } else {
            jEmailValidation.setText(" ");
        }  
    }//GEN-LAST:event_jEmailKeyReleased

    private boolean validateEmail(String validEmail){
        Pattern pattern = Pattern.compile("[A-Za-z0-9]+[.]{0,1}[A-Za-z0-9]+[@](gmail.com|northeastern.edu)");
        Matcher matcher = pattern.matcher(validEmail);
        return matcher.matches();   
    }
    
    private void jTelNumKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTelNumKeyReleased
        // TODO add your handling code here:
        if(!validateTelNum(jTelNum.getText())){
            jTelNumValidation.setText("Invalid Phone Number");
            jTelNumValidation.setForeground(Color.red);
        } else {
            jTelNumValidation.setText(" ");
        }  
    }//GEN-LAST:event_jTelNumKeyReleased

    private boolean validateTelNum(String validTelNum){
        Pattern pattern = Pattern.compile("[1-9]{1}[0-9]{9}");
        Matcher matcher = pattern.matcher(validTelNum);
        return matcher.matches();
    }
    
    private void jNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jNameKeyReleased
        // TODO add your handling code here:
        if(!validateName(jName.getText())){
            jNameValidation.setText("Invalid Name");
            jNameValidation.setForeground(Color.red);
        } else {
            jNameValidation.setText(" ");
        }
    }//GEN-LAST:event_jNameKeyReleased

    private boolean validateName(String validName){
        Pattern pattern = Pattern.compile("[A-Za-z ]+");
        Matcher matcher = pattern.matcher(validName);
        return matcher.matches();
    }
    
    private void jLevelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLevelKeyReleased
        // TODO add your handling code here:
       if(!validateLevel(jLevel.getText())){
            jLevelValidation.setText("Invalid Level Info");
            jLevelValidation.setForeground(Color.red);
        } else {
            jLevelValidation.setText(" ");
        }  
    }//GEN-LAST:event_jLevelKeyReleased

    private boolean validateLevel(String validLevel){
        Pattern pattern = Pattern.compile("[A-Za-z0-9]+");
        Matcher matcher = pattern.matcher(validLevel);
        return matcher.matches();
    }
    
    private boolean validateStartDate(String validStartDate){
        Pattern pattern = Pattern.compile("[0-9]{2}[-][0-9]{2}[-][0-9]{4}");
        Matcher matcher = pattern.matcher(validStartDate);
        return matcher.matches();
    }
    
    private void jPositionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPositionKeyReleased
        // TODO add your handling code here:
        if(!validatePosition(jPosition.getText())){
            jPositionValidation.setText("Invalid Position Title");
            jPositionValidation.setForeground(Color.red);
        } else {
            jPositionValidation.setText(" ");
        }
    }//GEN-LAST:event_jPositionKeyReleased

    private boolean validatePosition(String validPosition){
        Pattern pattern = Pattern.compile("[A-Za-z ]+");
        Matcher matcher = pattern.matcher(validPosition);
        return matcher.matches();
    }
    
    private void jTeamKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTeamKeyReleased
        // TODO add your handling code here:
        if(!validateTeam(jTeam.getText())){
            jTeamValidation.setText("Invalid Team Name");
            jTeamValidation.setForeground(Color.red);
        } else {
            jTeamValidation.setText(" ");
        }
    }//GEN-LAST:event_jTeamKeyReleased

    private boolean validateTeam(String validTeam){
        Pattern pattern = Pattern.compile("[A-Za-z0-9 ]+");
        Matcher matcher = pattern.matcher(validTeam);
        return matcher.matches();
    }
    
    private void jGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGenderActionPerformed
        // TODO add your handling code here:
        if(validateGender()){
            jGenderValidation.setText("Gender Required");
            jGenderValidation.setForeground(Color.red);
        } else {
            jGenderValidation.setText(" ");
        }
    }//GEN-LAST:event_jGenderActionPerformed

    private boolean validateGender(){
        String selectedGender = jGender.getSelectedItem().toString();
        return selectedGender.equals("-- Select --");
    }
    
    private void jAgeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAgeKeyReleased
        // TODO add your handling code here:
        if(!validateAge(jAge.getText())){
            jAgeValidation.setText("Minimum Age 18 Required");
            jAgeValidation.setForeground(Color.red);
        } else {
            jAgeValidation.setText(" ");
        } 
    }//GEN-LAST:event_jAgeKeyReleased

    private boolean validateAge(String validAge){
        Pattern pattern = Pattern.compile("[1-9]{1}[0-9]{0,1}"); //Only accept > than 18
        Matcher matcher = pattern.matcher(validAge);
        if(matcher.matches() && Integer.parseInt(validAge) >= 18) {
            return true;
        }
        return false;
    }
    
    //Advanced Search Validation
    private void jSearchOptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchOptionsActionPerformed
        // TODO add your handling code here:
        String searchBy = jSearchOptions.getSelectedItem().toString();
        if(searchBy.equalsIgnoreCase("Start Date")){
            jDateFormatMessage.setText("Format: dd-MM-yyyy");
            return;
        } 
        jDateFormatMessage.setText(" ");
    }//GEN-LAST:event_jSearchOptionsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jAge;
    private javax.swing.JLabel jAgeValidation;
    private javax.swing.JLabel jDateFormatMessage;
    private javax.swing.JButton jDeleteBtn;
    private javax.swing.JTextField jEmail;
    private javax.swing.JLabel jEmailValidation;
    private javax.swing.JTextField jEmpId;
    private javax.swing.JComboBox<String> jGender;
    private javax.swing.JLabel jGenderValidation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jLevel;
    private javax.swing.JLabel jLevelValidation;
    private javax.swing.JPanel jNEUPanel;
    private javax.swing.JLabel jNEUPhoto;
    private javax.swing.JTextField jName;
    private javax.swing.JLabel jNameValidation;
    private javax.swing.JPanel jPInfoPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel jPictureValidation;
    private javax.swing.JTextField jPosition;
    private javax.swing.JLabel jPositionValidation;
    private javax.swing.JButton jResetBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jSearch;
    private javax.swing.JButton jSearchBtn;
    private javax.swing.JComboBox<String> jSearchOptions;
    private com.toedter.calendar.JDateChooser jStartDate;
    private javax.swing.JLabel jStartDateValidation;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField jTeam;
    private javax.swing.JLabel jTeamValidation;
    private javax.swing.JTextField jTelNum;
    private javax.swing.JLabel jTelNumValidation;
    private javax.swing.JButton jUpdateBtn;
    private javax.swing.JButton jUploadPhoto;
    private javax.swing.JLabel jUserPhoto;
    // End of variables declaration//GEN-END:variables

    private void populateEmployeeTable() {
       DefaultTableModel dtmodel = (DefaultTableModel) jTable.getModel();
        dtmodel.setRowCount(0);
        
        for(Employee emp: employeeCatalogue.getEmployeeList()){
            Object[] obj = new Object[6];
            obj[0] = emp;
            obj[1] = emp.getName();
            obj[2] = emp.getGender();
            String startDate = new SimpleDateFormat("dd-MM-yyyy").format(emp.getStartDate());
            obj[3] = startDate;
            obj[4] = emp.getPositionTitle();
            obj[5] = emp.getLevel();
            dtmodel.addRow(obj);
        }
    }
}
