/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.HospitalAdmin;

import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Hospital;
import model.HospitalCatalogue;

/**
 *
 * @author omerq
 */
public class HospitalAdminBaseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HospitalAdminBaseJPanel
     */
    private HospitalCatalogue hospitalCatalogue;
    
    private int hospitalID = 1000; //Starting hospId
    private int defaultID = 1000;
    
    public HospitalAdminBaseJPanel(HospitalCatalogue hospitalCatalogue) {
        initComponents();
        this.hospitalCatalogue = hospitalCatalogue;
        
        //Populate View Tables - Hospital
        populateHospitalTable();
        
        //Hospital ID
        jHospitalId.setEnabled(false); //non-editable 
        jHospitalId.setText(String.valueOf(generateHospitalID()));
        
        jUpdateBtn.setEnabled(false);
        jDeleteBtn.setEnabled(false);
        
        //DropDown logic
        populateDropDownValues();
    }
    
    //ID
    private int generateHospitalID(){
        if(!hospitalCatalogue.getHospitalList().isEmpty()){
            hospitalID = hospitalCatalogue.getHospitalList().get(hospitalCatalogue.getHospitalList().size()-1).getHospitalID()+1;
            return hospitalID;
        }   
        return defaultID;
    }
    
    private void populateHospitalTable() {
       DefaultTableModel htmodel = (DefaultTableModel) jHospitalTable.getModel();
        htmodel.setRowCount(0);
        
        for(Hospital hosp: hospitalCatalogue.getHospitalList()){
            Object[] obj = new Object[7];
            obj[0] = hosp;
            obj[1] = hosp.getHospitalName();
            obj[2] = hosp.getCity();
            obj[3] = hosp.getCommunity();
            obj[4] = hosp.getAddress();
            obj[5] = hosp.getContactNumber();
            obj[6] = hosp.getEmail();
            htmodel.addRow(obj);
        }
    }
    
    //Drop-down logic
    private void populateDropDownValues(){

        //Advanced Search 
        List<String> searchList = new ArrayList<>();
        String[] searchOptions = {"-- Select --", "City", "Community"};
        for(String str: searchOptions){
           searchList.add(str);
        }
        jAdvSearchOption.setModel(new DefaultComboBoxModel<>(searchList.toArray(new String[0])));
    }
    
    
    
    //Clear fields logic
    private void clearFields(){
        
        //Clear fields
        jHospitalId.setText("");
        jHospitalAddress.setText("");
        jHospitalCity.setText("");
        jHospitalCommunity.setText("");
        jHospital.setText("");
        jHospitalContactNumber.setText("");
        jHospitalEmail.setText("");
        
        //Clear validation messages
        jHospitalNameValidation.setText(" ");
        jHospitalContactValidation.setText(" ");
        jHospitalEmailValidation.setText(" ");
        jHospitalCityValidation.setText(" ");
        jHospitalCommunityValidation.setText(" ");
        jAdvSearchValidation.setText(" ");
        
        //Refresh doctorId
        jHospitalId.setText(String.valueOf(generateHospitalID()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jAdvancedSearchPanel = new javax.swing.JPanel();
        jAdvSearchOption = new javax.swing.JComboBox<>();
        jAdvSearch = new javax.swing.JTextField();
        jAdvSearchBtn = new javax.swing.JButton();
        jResetBtn = new javax.swing.JButton();
        jAdvSearchValidation = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jHospitalTable = new javax.swing.JTable();
        jPInfoPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jHospitalCityValidation = new javax.swing.JLabel();
        jHospitalCommunityValidation = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jHospitalId = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jHospitalAddress = new javax.swing.JTextField();
        jHospitalNameValidation = new javax.swing.JLabel();
        jHospitalCity = new javax.swing.JTextField();
        jHospital = new javax.swing.JTextField();
        jHospitalCommunity = new javax.swing.JTextField();
        jPInfoPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jHospitalEmail = new javax.swing.JTextField();
        jHospitalEmailValidation = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jHospitalContactNumber = new javax.swing.JTextField();
        jHospitalContactValidation = new javax.swing.JLabel();
        jActionPanel = new javax.swing.JPanel();
        jUpdateBtn = new javax.swing.JButton();
        jDeleteBtn = new javax.swing.JButton();
        jAddBtn = new javax.swing.JButton();
        jTitle = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1100, 800));
        setMinimumSize(new java.awt.Dimension(1100, 800));
        setPreferredSize(new java.awt.Dimension(1100, 800));

        jAdvancedSearchPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Advanced Search"));
        jAdvancedSearchPanel.setPreferredSize(new java.awt.Dimension(492, 100));

        jAdvSearchOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select --" }));
        jAdvSearchOption.setMaximumSize(new java.awt.Dimension(91, 22));
        jAdvSearchOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAdvSearchOptionActionPerformed(evt);
            }
        });

        jAdvSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAdvSearchActionPerformed(evt);
            }
        });

        jAdvSearchBtn.setText("Search");
        jAdvSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAdvSearchBtnActionPerformed(evt);
            }
        });

        jResetBtn.setText("Reset");
        jResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jResetBtnActionPerformed(evt);
            }
        });

        jAdvSearchValidation.setText("   ");

        javax.swing.GroupLayout jAdvancedSearchPanelLayout = new javax.swing.GroupLayout(jAdvancedSearchPanel);
        jAdvancedSearchPanel.setLayout(jAdvancedSearchPanelLayout);
        jAdvancedSearchPanelLayout.setHorizontalGroup(
            jAdvancedSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jAdvancedSearchPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jAdvSearchOption, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jAdvancedSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jAdvSearchValidation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jAdvSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jAdvSearchBtn)
                .addGap(10, 10, 10)
                .addComponent(jResetBtn)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jAdvancedSearchPanelLayout.setVerticalGroup(
            jAdvancedSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jAdvancedSearchPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jAdvancedSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jAdvSearchOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAdvSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAdvSearchBtn)
                    .addComponent(jResetBtn))
                .addGap(5, 5, 5)
                .addComponent(jAdvSearchValidation)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        jHospitalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Hospital ID", "Hospital Name", "City", "Community", "Address", "Telephone", "Email "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jHospitalTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jHospitalTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jHospitalTable);

        jPInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Hospital Information"));
        jPInfoPanel.setPreferredSize(new java.awt.Dimension(508, 276));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Hospital ");

        jHospitalCityValidation.setText("   ");

        jHospitalCommunityValidation.setText("   ");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Hospital ID");

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel24.setText("City");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Community");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel25.setText("Address");

        jHospitalCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jHospitalCityKeyReleased(evt);
            }
        });

        jHospital.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jHospitalKeyReleased(evt);
            }
        });

        jHospitalCommunity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jHospitalCommunityKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPInfoPanelLayout = new javax.swing.GroupLayout(jPInfoPanel);
        jPInfoPanel.setLayout(jPInfoPanelLayout);
        jPInfoPanelLayout.setHorizontalGroup(
            jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPInfoPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPInfoPanelLayout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addGap(45, 45, 45)
                                .addComponent(jHospitalAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPInfoPanelLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(25, 25, 25)
                                .addComponent(jHospitalCommunity)))
                        .addComponent(jHospitalCommunityValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPInfoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(29, 29, 29)
                        .addComponent(jHospitalId, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40)
                .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(jLabel4))
                .addGap(48, 48, 48)
                .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jHospitalCityValidation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jHospitalNameValidation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jHospitalCity, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                    .addComponent(jHospital))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPInfoPanelLayout.setVerticalGroup(
            jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPInfoPanelLayout.createSequentialGroup()
                .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPInfoPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jHospitalId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jHospitalCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jHospitalCityValidation))
                    .addGroup(jPInfoPanelLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jHospitalCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPInfoPanelLayout.createSequentialGroup()
                        .addComponent(jHospitalCommunityValidation)
                        .addGap(18, 18, 18)
                        .addGroup(jPInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jHospitalAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPInfoPanelLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jHospitalNameValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );

        jPInfoPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Contact Information"));
        jPInfoPanel1.setPreferredSize(new java.awt.Dimension(508, 276));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Email");

        jHospitalEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jHospitalEmailKeyReleased(evt);
            }
        });

        jHospitalEmailValidation.setText("   ");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Telephone");

        jHospitalContactNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jHospitalContactNumberKeyReleased(evt);
            }
        });

        jHospitalContactValidation.setText("   ");

        javax.swing.GroupLayout jPInfoPanel1Layout = new javax.swing.GroupLayout(jPInfoPanel1);
        jPInfoPanel1.setLayout(jPInfoPanel1Layout);
        jPInfoPanel1Layout.setHorizontalGroup(
            jPInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPInfoPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jHospitalContactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jHospitalContactValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPInfoPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(167, 167, 167)))
                .addGap(20, 20, 20)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jHospitalEmailValidation, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHospitalEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPInfoPanel1Layout.setVerticalGroup(
            jPInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPInfoPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jHospitalEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHospitalContactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jHospitalEmailValidation)
                    .addComponent(jHospitalContactValidation))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        jActionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Action"));

        jUpdateBtn.setText("Update");
        jUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdateBtnActionPerformed(evt);
            }
        });

        jDeleteBtn.setText("Delete");
        jDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteBtnActionPerformed(evt);
            }
        });

        jAddBtn.setText("Add");
        jAddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jActionPanelLayout = new javax.swing.GroupLayout(jActionPanel);
        jActionPanel.setLayout(jActionPanelLayout);
        jActionPanelLayout.setHorizontalGroup(
            jActionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jActionPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jAddBtn)
                .addGap(12, 12, 12)
                .addComponent(jUpdateBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDeleteBtn)
                .addGap(10, 10, 10))
        );
        jActionPanelLayout.setVerticalGroup(
            jActionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jActionPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jActionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jAddBtn)
                    .addComponent(jUpdateBtn)
                    .addComponent(jDeleteBtn))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTitle.setText("HOSPITAL ADMIN");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jPInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jPInfoPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jActionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(140, 140, 140))))
            .addGroup(layout.createSequentialGroup()
                .addGap(450, 450, 450)
                .addComponent(jTitle)
                .addGap(493, 493, 493))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(585, 585, 585)
                        .addComponent(jAdvancedSearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jAdvancedSearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPInfoPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jActionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(191, 191, 191))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jAdvSearchOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAdvSearchOptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jAdvSearchOptionActionPerformed

    private void jAdvSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAdvSearchActionPerformed
        // TODO add your handling code here:
        //Validation based on selected dropdown value
    }//GEN-LAST:event_jAdvSearchActionPerformed

    private void jAdvSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAdvSearchBtnActionPerformed
        String searchType = jAdvSearchOption.getSelectedItem().toString();
        String searchValue = jAdvSearch.getText(); //city,community
        //Validation
        if(!validateSearchOption(searchType, searchValue)){
            return;
        }
        if(searchType.equals("-- Select --")){
            JOptionPane.showMessageDialog(this, "Please select valid search option");
            return;
        }
        //Initialize Table 
        DefaultTableModel htmodel = (DefaultTableModel) jHospitalTable.getModel();
        htmodel.setRowCount(0);
        //Populate rowData
        ArrayList<Hospital> tempList = hospitalCatalogue.searchByOption(searchType, searchValue, hospitalCatalogue.getHospitalList()); //model-class call
        if(tempList.isEmpty()){
            JOptionPane.showMessageDialog(this, "No data found!");
//            this.populateEmployeeTable();  
        } else {
            //Iterate and show data
            for(Hospital hosp: tempList){
                Object[] obj = new Object[7];
                 obj[0] = hosp;
                 obj[1] = hosp.getHospitalName();
                 obj[2] = hosp.getCity();
                 obj[3] = hosp.getCommunity();
                 obj[4] = hosp.getAddress();
                 obj[5] = hosp.getContactNumber();
                 obj[6] = hosp.getEmail();
                 htmodel.addRow(obj);
               
            }
            JOptionPane.showMessageDialog(this, "Found " + tempList.size() + " entries!");
        }  
        
    }//GEN-LAST:event_jAdvSearchBtnActionPerformed

    private boolean validateSearchOption(String searchType, String searchValue){
        if(searchType.equalsIgnoreCase("City") && !validateHospitalCity(searchValue)){
            jAdvSearchValidation.setText("Invalid City");
            jAdvSearchValidation.setForeground(Color.red);
            return false;
        } else if(searchType.equalsIgnoreCase("Community") && !validateHospitalCommunity(searchValue)){
            jAdvSearchValidation.setText("Invalid Community");
            jAdvSearchValidation.setForeground(Color.red);
            return false;
        } else {
            jAdvSearchValidation.setText(" ");
            return true;
        }
    }
    
     private boolean validateHospitalCity(String validHosCity){
        Pattern pattern = Pattern.compile("[A-Za-z ]+");
        Matcher matcher = pattern.matcher(validHosCity);
        return matcher.matches();
    }
    
    private boolean validateHospitalCommunity(String validHosCommunity){
        Pattern pattern = Pattern.compile("[A-Za-z ]+");
        Matcher matcher = pattern.matcher(validHosCommunity);
        return matcher.matches();
    }
    private void jResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jResetBtnActionPerformed
       // Toggle buttons
        jAddBtn.setEnabled(true);
        jUpdateBtn.setEnabled(false);
        jDeleteBtn.setEnabled(false);
        clearFields();
        populateHospitalTable();
        jAdvSearchOption.setSelectedIndex(0);
        jAdvSearch.setText("");
    }//GEN-LAST:event_jResetBtnActionPerformed

    
    private void jHospitalEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jHospitalEmailKeyReleased
if(!validateEmail()){
            jHospitalEmailValidation.setText("Invalid Email");
            jHospitalEmailValidation.setForeground(Color.red);
        } else {
            jHospitalEmailValidation.setText(" ");
    }        
    }//GEN-LAST:event_jHospitalEmailKeyReleased

    private boolean validateEmail(){
        boolean isValid;
        String validEmail = jHospitalEmail.getText();
        Pattern pattern = Pattern.compile("[A-Za-z0-9]+[.]{0,1}[A-Za-z0-9]+[@](gmail.com|northeastern.edu)");
        Matcher matcher = pattern.matcher(validEmail);
        isValid = matcher.matches();
        return isValid;
    }
    
    private void jHospitalContactNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jHospitalContactNumberKeyReleased
        if(!validateContactNumber()){
            jHospitalContactValidation.setText("Invalid Phone Number");
            jHospitalContactValidation.setForeground(Color.red);
        } else {
            jHospitalContactValidation.setText(" ");
        } 
    }//GEN-LAST:event_jHospitalContactNumberKeyReleased

    private boolean validateContactNumber(){
        boolean isValid;
        String validTelNum = jHospitalContactNumber.getText();
        Pattern pattern = Pattern.compile("[1-9]{1}[0-9]{9}");
        Matcher matcher = pattern.matcher(validTelNum);
        isValid = matcher.matches();
        return isValid;
    }
    
    
    
   
    private void jUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdateBtnActionPerformed
         int selectedRow = jHospitalTable.getSelectedRow();      
        if(selectedRow<0){
            JOptionPane.showMessageDialog(this, "Please select any row to update");
            return;
        }  
        
        //valildations
        boolean checkIsValid = validateHospital() && validateContactNumber() && validateEmail() 
                                && validateHospitalCity() && validateHospitalCommunity();

        if(!checkIsValid){
            JOptionPane.showMessageDialog(this, "Please enter required fields!");
            return;
        }
        
        //Display selectedRow
        Hospital updatedHospital = new Hospital();
        updatedHospital.setCity(jHospitalCity.getText());
        updatedHospital.setCommunity(jHospitalCommunity.getText());
        updatedHospital.setHospitalName(jHospital.getText());
        updatedHospital.setHospitalID(Integer.parseInt(jHospitalId.getText()));
        updatedHospital.setContactNumber(jHospitalContactNumber.getText());
        updatedHospital.setEmail(jHospitalEmail.getText());
        updatedHospital.setAddress(jHospitalAddress.getText());
        updatedHospital.setContactNumber(jHospitalContactNumber.getText());
        
        //update
        hospitalCatalogue.updateHospital(updatedHospital, hospitalCatalogue.getHospitalList());
        JOptionPane.showMessageDialog(this, "Hospital details are updated!");
        this.populateHospitalTable();   
       
        //Clear deleted data
        clearFields();
        
        //refresh doctorId
        jHospitalId.setText(String.valueOf(generateHospitalID()));
        
        //Toggle buttons
        jAddBtn.setEnabled(true);
        jUpdateBtn.setEnabled(false);
        jDeleteBtn.setEnabled(false);
          
    }//GEN-LAST:event_jUpdateBtnActionPerformed

    private void jDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteBtnActionPerformed
        int selectedRow = jHospitalTable.getSelectedRow();      
        if(selectedRow<0){
            JOptionPane.showMessageDialog(this, "Please select any row to delete");
            return;
        }  
        DefaultTableModel htmodel = (DefaultTableModel) jHospitalTable.getModel();
        Hospital selectedRowObj = (Hospital) htmodel.getValueAt(selectedRow, 0);
        hospitalCatalogue.removeHospital(selectedRowObj);
        JOptionPane.showMessageDialog(this, "Hospital is removed!");
        
        //refresh table data
        this.populateHospitalTable();  
        
        //Clear deleted data
        clearFields();
        
        //refresh doctorId
        jHospitalId.setText(String.valueOf(generateHospitalID()));
        
        //Toggle buttons
        jAddBtn.setEnabled(true);
        jUpdateBtn.setEnabled(false);
        jDeleteBtn.setEnabled(false);
    }//GEN-LAST:event_jDeleteBtnActionPerformed

    private void jAddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddBtnActionPerformed
        // TODO add your handling code here:
        //check validations
        boolean checkIsValid = validateHospital() && validateContactNumber() && validateEmail() 
                                && validateHospitalCity() && validateHospitalCommunity();
        if(!checkIsValid){
            JOptionPane.showMessageDialog(this, "Please provide the required details!");
            return;
        }
        //validations passed
        Hospital hospital = new Hospital();
        
        //Set variables
        hospital.setCity(jHospitalCity.getText());
        hospital.setCommunity(jHospitalCommunity.getText());
        hospital.setHospitalName(jHospital.getText());
        hospital.setHospitalID(Integer.parseInt(jHospitalId.getText()));
        hospital.setContactNumber(jHospitalContactNumber.getText());
        hospital.setEmail(jHospitalEmail.getText());
        hospital.setAddress(jHospitalAddress.getText());
        hospital.setContactNumber(jHospitalContactNumber.getText());
        //Add to list
        hospitalCatalogue.addHospital(hospital);
        JOptionPane.showMessageDialog(null, "Hospital added successfully!!", "Info", JOptionPane.INFORMATION_MESSAGE);
        
        //Clear fields after save
        clearFields();
        
        //refresh table after save
        populateHospitalTable();
        

        
    }//GEN-LAST:event_jAddBtnActionPerformed

    private void jHospitalTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jHospitalTableMouseClicked
        // TODO add your handling code here:
        // disable Add button
        jAddBtn.setEnabled(false);
        jUpdateBtn.setEnabled(true);
        jDeleteBtn.setEnabled(true);
        
        //Clear previous selected data
        clearFields();
        
        //Select row data
        int selectedRow = jHospitalTable.getSelectedRow();
        DefaultTableModel htmodel = (DefaultTableModel) jHospitalTable.getModel();
        Hospital selectedRowObj = (Hospital) htmodel.getValueAt(selectedRow, 0);
        
        //Display rowData
        jHospitalCity.setText(selectedRowObj.getCity());
        jHospitalCommunity.setText(selectedRowObj.getCommunity());
        jHospital.setText(selectedRowObj.getHospitalName());
        jHospitalId.setText(String.valueOf(selectedRowObj.getHospitalID()));
        jHospitalAddress.setText(selectedRowObj.getAddress());
        jHospitalContactNumber.setText(selectedRowObj.getContactNumber());
        jHospitalEmail.setText(selectedRowObj.getEmail()); 
    }//GEN-LAST:event_jHospitalTableMouseClicked

    private void jHospitalCityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jHospitalCityKeyReleased
        // TODO add your handling code here:
        if(!validateHospitalCity()){
            jHospitalCityValidation.setText("Invalid Name");
            jHospitalCityValidation.setForeground(Color.red);
        } else {
            jHospitalCityValidation.setText(" ");
        }
    }//GEN-LAST:event_jHospitalCityKeyReleased

    private void jHospitalCommunityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jHospitalCommunityKeyReleased
        // TODO add your handling code here:
                if(!validateHospitalCommunity()){
            jHospitalCommunityValidation.setText("Invalid Name");
            jHospitalCommunityValidation.setForeground(Color.red);
        } else {
            jHospitalCommunityValidation.setText(" ");
        }
    }//GEN-LAST:event_jHospitalCommunityKeyReleased

    private void jHospitalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jHospitalKeyReleased
        // TODO add your handling code here:
                if(!validateHospital()){
            jHospitalNameValidation.setText("Invalid Name");
            jHospitalNameValidation.setForeground(Color.red);
        } else {
            jHospitalNameValidation.setText(" ");
        }
    }//GEN-LAST:event_jHospitalKeyReleased

    private boolean validateHospitalCity(){
        boolean isValid;
        String validCity = jHospitalCity.getText();
        Pattern pattern = Pattern.compile("[A-Za-z ]+");
        Matcher matcher = pattern.matcher(validCity);
        isValid = matcher.matches();
        return isValid;
    }
    
    private boolean validateHospitalCommunity(){
        boolean isValid;
        String validCommunity = jHospitalCommunity.getText();
        Pattern pattern = Pattern.compile("[A-Za-z ]+");
        Matcher matcher = pattern.matcher(validCommunity);
        isValid = matcher.matches();
        return isValid;
    }
    
    private boolean validateHospital(){
        boolean isValid;
        String validHospital = jHospital.getText();
        Pattern pattern = Pattern.compile("[A-Za-z ]+");
        Matcher matcher = pattern.matcher(validHospital);
        isValid = matcher.matches();
        return isValid;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jActionPanel;
    private javax.swing.JButton jAddBtn;
    private javax.swing.JTextField jAdvSearch;
    private javax.swing.JButton jAdvSearchBtn;
    private javax.swing.JComboBox<String> jAdvSearchOption;
    private javax.swing.JLabel jAdvSearchValidation;
    private javax.swing.JPanel jAdvancedSearchPanel;
    private javax.swing.JButton jDeleteBtn;
    private javax.swing.JTextField jHospital;
    private javax.swing.JTextField jHospitalAddress;
    private javax.swing.JTextField jHospitalCity;
    private javax.swing.JLabel jHospitalCityValidation;
    private javax.swing.JTextField jHospitalCommunity;
    private javax.swing.JLabel jHospitalCommunityValidation;
    private javax.swing.JTextField jHospitalContactNumber;
    private javax.swing.JLabel jHospitalContactValidation;
    private javax.swing.JTextField jHospitalEmail;
    private javax.swing.JLabel jHospitalEmailValidation;
    private javax.swing.JTextField jHospitalId;
    private javax.swing.JLabel jHospitalNameValidation;
    private javax.swing.JTable jHospitalTable;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPInfoPanel;
    private javax.swing.JPanel jPInfoPanel1;
    private javax.swing.JButton jResetBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jTitle;
    private javax.swing.JButton jUpdateBtn;
    // End of variables declaration//GEN-END:variables

}














